sudo apt install sqlite3
pip3 install flask flask-sqlalchemy


mkdir interface
cd interface

//file app.py (Flask application)

from flask import Flask, render_template, request, redirect, url_for, session
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SECRET_KEY'] = 'your_secret_key'
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///site.db'
db = SQLAlchemy(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(20), unique=True, nullable=False)
    password = db.Column(db.String(60), nullable=False)

@app.route('/')
def home():
    return render_template('home.html')

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        new_user = User(username=username, password=password)
        db.session.add(new_user)
        db.session.commit()
        return redirect(url_for('home'))
    return render_template('register.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        user = User.query.filter_by(username=username, password=password).first()
        if user:
            session['username'] = user.username
            return redirect(url_for('home'))
        else:
            return 'Login Failed'
    return render_template('login.html')

if __name__ == '__main__':
    db.create_all()
    app.run(debug=True)



// HTML templates

mkdir templates

//home.html
<h1>Welcome to the Home Page</h1>
<a href="/login">Login</a> | <a href="/register">Register</a>

//register.html
<h1>Register</h1>
<form method="post">
    Username: <input type="text" name="username"><br>
    Password: <input type="password" name="password"><br>
    <input type="submit" value="Register">
</form>

//login.html
<h1>Login</h1>
<form method="post">
    Username: <input type="text" name="username"><br>
    Password: <input type="password" name="password"><br>
    <input type="submit" value="Login">
</form>

=============================
//run the app
http://127.0.0.1:5000/

// use password hashing
pip install flask-bcrypt

python3 app.py


//to make sure changes e.g. password hashing are reflected on the database
pip install Flask-Migrate

//in app.py
from flask_migrate import Migrate

# existing Flask and SQLAlchemy setup
app = Flask(__name__)
db = SQLAlchemy(app)
migrate = Migrate(app, db)

========================================


// see the list of registered users! 
//navigate to interface/instances
sqlite3 site.db
SELECT * FROM user;
sqlite> .quit

======================================

//migrate changes 
flask db update

----------------

//add protection
pip install Flask-WTF


from flask_wtf.csrf import CSRFProtect

app = Flask(__name__)
csrf = CSRFProtect(app)


// CSRF protection should be included on all pages that feature forms!!!!


====================

//to handle excel files
pip install pandas openpyxl

=====================

//install and use git 
sudo apt-get install git
git config --global user.name "Iglika Nikolova-Stoupak"
git config --global user.email "iglika.nikolova.stoupak@gmail.com"
//create a git repository
git init
//add files to be committed - here the whole directory
git add .
//initial commit
git commit -m "Initial commit"
//to see history of changes
git log
// after changing something
git add <filename>  OR git add . 
git commit -m "Description of what changed"
//revert to previous state
git checkout <commit-id>
//go back to last state
git checkout .

========================================

make a table in sql to store users' exercises


--------------------------

//use vpn
nordvpn connect Japan
nordvpn set autoconnect on Japan




